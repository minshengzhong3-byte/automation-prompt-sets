# ========================
# USER RULES - 核心配置
# ========================
# 此文件定义提示词采集和身份切换的核心规则

# 1. 系统基础配置
system:
  version: "1.0"
  priority: "highest"
  target_file: ".trae/rules/project_rules.md"

# 2. 提示词采集规则
prompt_collection:
  # 采集触发条件
  triggers:
    - "stage_change"
    - "identity_switch"
    - "manual_request"
    - "project_initialization"  # 项目初始化触发条件
    - "first_conversation"      # 新增：第一句对话触发

  # 项目初始化配置
  project_initialization:
    # 默认开发类型（基于对话内容识别）
    default_development_type: "program_development"
    # 默认起始阶段（直接进入需求分析）
    default_stage: "requirements_analysis"
    # 默认身份（需求分析阶段使用架构师）
    default_identity: "architect"
    # 禁用文件夹名称检测，改为基于对话内容识别
    type_detection:
      method: "conversation_based"
      # 不再使用文件模式匹配
      file_patterns: {}
      # 不再使用目录结构匹配
      directory_patterns: {}

  # 阶段流转配置
  stage_transition:
    # 自动阶段流转规则
    auto_transition: true
    # 基于对话内容触发阶段流转
    conversation_based_transition: true
    # 阶段完成条件（基于关键对话节点）
    completion_criteria:
      requirements_analysis:
        min_conversation_turns: 3  # 最少3轮对话
        key_phrases: ["需求明确", "功能确定", "开始设计"]
      planning:
        min_conversation_turns: 2
        key_phrases: ["架构设计", "技术选型", "开始开发"]
      development:
        min_conversation_turns: 5
        key_phrases: ["代码完成", "功能实现", "开始测试"]
      testing:
        min_conversation_turns: 2
        key_phrases: ["测试通过", "验收完成", "项目结束"]
  
  # 采集目标目录
  target_directories:
    - ".trae/rules/prompt_sets/core/"
    - ".trae/rules/prompt_sets/identities/"
  
  # 采集优先级
  priority_order:
    - "core"
    - "current_identity"
    - "current_stage"
    - "development_type"
    - "research_type"

  # 开发类型定义
  development_types:
    program_development:
      description: "程序开发 - 通用软件开发项目"
      stages: ["requirements_analysis", "planning", "development", "testing"]
      default_identity: "developer"
      # 新增：阶段特定身份配置
      stage_identities:
        requirements_analysis: "architect"
        planning: "architect"
        development: "developer"
        testing: "qa_tester"
      
    web_development:
      description: "网站开发 - Web应用和网站建设"
      stages: ["requirements_analysis", "planning", "development", "testing"]
      default_identity: "developer"
      stage_identities:
        requirements_analysis: "architect"
        planning: "architect"
        development: "developer"
        testing: "qa_tester"
      
    tool_development:
      description: "工具开发 - 开发工具和实用程序"
      stages: ["requirements_analysis", "planning", "development", "testing"]
      default_identity: "developer"
      stage_identities:
        requirements_analysis: "architect"
        planning: "architect"
        development: "developer"
        testing: "qa_tester"
      
    reverse_engineering:
      description: "逆向工程 - 程序逆向分析和安全研究"
      stages: ["binary_analysis", "disassembly", "protocol_analysis", "vulnerability_analysis", "report_generation"]
      default_identity: "reverse_engineer"
      stage_identities:
        binary_analysis: "reverse_engineer"
        disassembly: "reverse_engineer"
        protocol_analysis: "reverse_engineer"
        vulnerability_analysis: "reverse_engineer"
        report_generation: "reverse_engineer"

  # 阶段定义
  stages:
    requirements_analysis:
      description: "需求分析阶段 - 收集和分析项目需求"
      target_identity: "architect"
      prompt_files: ["requirements_analysis.md"]
      next_stage: "planning"
      # 新增：交接产物和进度检查
      deliverables:
        - "需求规格说明书"
        - "功能清单"
        - "用户故事地图"
      completion_criteria:
        - "所有功能需求明确"
        - "技术可行性确认"
        - "项目范围确定"
      progress_checkpoints:
        - "需求收集完成50%"
        - "需求分析完成80%"
        - "需求评审通过"
      
    planning:
      description: "计划阶段 - 制定项目计划和架构设计"
      target_identity: "architect"
      prompt_files: ["planning.md"]
      next_stage: "development"
      # 新增：交接产物和进度检查
      deliverables:
        - "技术架构设计文档"
        - "开发计划时间表"
        - "技术选型报告"
      completion_criteria:
        - "架构设计完成"
        - "开发任务分解"
        - "技术风险识别"
      progress_checkpoints:
        - "架构设计完成60%"
        - "技术方案确定"
        - "开发计划制定完成"
      
    development:
      description: "开发阶段 - 编写和实现代码"
      target_identity: "developer"
      prompt_files: ["development.md"]
      next_stage: "testing"
      # 新增：交接产物和进度检查
      deliverables:
        - "可运行的程序代码"
        - "单元测试用例"
        - "技术文档"
      completion_criteria:
        - "核心功能实现"
        - "代码质量达标"
        - "单元测试通过"
      progress_checkpoints:
        - "开发环境搭建完成"
        - "核心模块开发完成50%"
        - "整体功能开发完成80%"
      
    testing:
      description: "测试阶段 - 验证代码功能和性能"
      target_identity: "qa_tester"
      prompt_files: ["testing.md"]
      next_stage: null  # 项目完成
      # 新增：交接产物和进度检查
      deliverables:
        - "测试报告"
        - "缺陷清单"
        - "性能测试结果"
      completion_criteria:
        - "所有测试用例执行完成"
        - "关键缺陷修复"
        - "性能指标达标"
      progress_checkpoints:
        - "测试用例设计完成"
        - "功能测试完成70%"
        - "回归测试通过"
      
    binary_analysis:
      description: "二进制分析阶段 - 分析可执行文件结构"
      target_identity: "reverse_engineer"
      prompt_files: ["binary_analysis.md"]
      next_stage: "disassembly"
      # 新增：交接产物和进度检查
      deliverables:
        - "二进制文件结构分析报告"
        - "导入导出函数清单"
        - "文件格式分析结果"
      completion_criteria:
        - "文件格式识别完成"
        - "关键函数定位"
        - "初步行为分析"
      progress_checkpoints:
        - "文件头分析完成"
        - "节区分析完成70%"
        - "导入表分析完成"
      
    disassembly:
      description: "反汇编阶段 - 将机器码转换为汇编代码"
      target_identity: "reverse_engineer"
      prompt_files: ["disassembly_techniques.md"]
      next_stage: "protocol_analysis"
      # 新增：交接产物和进度检查
      deliverables:
        - "反汇编代码文件"
        - "函数调用关系图"
        - "关键算法识别"
      completion_criteria:
        - "主要函数反汇编完成"
        - "控制流分析完成"
        - "关键算法理解"
      progress_checkpoints:
        - "入口点反汇编完成"
        - "核心函数反汇编60%"
        - "控制流图生成"
      
    protocol_analysis:
      description: "协议分析阶段 - 逆向分析网络协议"
      target_identity: "reverse_engineer"
      prompt_files: ["protocol_analysis.md"]
      next_stage: "vulnerability_analysis"
      # 新增：交接产物和进度检查
      deliverables:
        - "协议格式文档"
        - "通信流量分析"
        - "协议字段解析"
      completion_criteria:
        - "协议结构解析完成"
        - "通信模式识别"
        - "数据格式确定"
      progress_checkpoints:
        - "数据包捕获完成"
        - "协议字段识别50%"
        - "通信流程分析完成"
      
    vulnerability_analysis:
      description: "漏洞分析阶段 - 识别安全漏洞"
      target_identity: "reverse_engineer"
      prompt_files: ["vulnerability_analysis.md"]
      next_stage: "report_generation"
      # 新增：交接产物和进度检查
      deliverables:
        - "漏洞分析报告"
        - "利用代码PoC"
        - "风险评估"
      completion_criteria:
        - "漏洞类型确认"
        - "利用可行性验证"
        - "影响范围评估"
      progress_checkpoints:
        - "漏洞初步识别"
        - "利用链分析完成70%"
        - "漏洞验证通过"
      
    report_generation:
      description: "报告生成阶段 - 生成逆向分析报告"
      target_identity: "reverse_engineer"
      prompt_files: ["framework.md"]
      next_stage: null  # 逆向工程完成
      # 新增：交接产物和进度检查
      deliverables:
        - "完整的逆向工程报告"
        - "技术细节文档"
        - "修复建议"
      completion_criteria:
        - "报告结构完整"
        - "技术内容准确"
        - "建议切实可行"
      progress_checkpoints:
        - "报告大纲完成"
        - "技术章节编写70%"
        - "报告审核通过"

# 3. 身份管理规则
identity_management:
  # 身份定义
  identities:
    code_analyst:
      description: "代码分析师 - 分析代码结构和逻辑"
      prompt_path: ".trae/rules/prompt_sets/identities/code_analyst.md"
    
    architect:
      description: "架构师 - 设计解决方案和架构"
      prompt_path: ".trae/rules/prompt_sets/identities/architect.md"
    
    code_reviewer:
      description: "代码审查员 - 执行代码审查和静态分析"
      prompt_path: ".trae/rules/prompt_sets/identities/code_reviewer.md"
    
    developer:
      description: "开发者 - 编写和修改代码"
      prompt_path: ".trae/rules/prompt_sets/identities/developer.md"
    
    qa_tester:
      description: "测试员 - 验证代码功能和稳定性"
      prompt_path: ".trae/rules/prompt_sets/identities/qa_tester.md"
    
    reverse_engineer:
      description: "逆向工程师 - 执行程序逆向分析和安全研究"
      prompt_path: ".trae/rules/prompt_sets/identities/reverse_engineer.md"

# 4. project_rules.md 更新规则
project_rules_update:
  # 更新触发条件
  update_triggers:
    - "prompt_collection_completed"
    - "identity_switch_completed"
    - "development_type_change"
    - "stage_change"
  
  # 更新内容
  update_content:
    - "current_identity: <identity_name>"
    - "collected_prompts: <prompt_list>"
    - "available_identities: [<identity_list>]"
    - "current_development_type: <development_type>"
    - "current_stage: <stage>"
    - "available_stages: [<stage_list>]"
  
  # 更新策略
  update_strategy:
    merge_strategy: "intelligent_merge"
    conflict_resolution: "priority_based"
    preserve_context: true
    # 新增：更新频率控制
    update_frequency: "immediate"  # 立即更新
    batch_updates: false  # 不批量更新
    # 新增：更新验证
    validate_updates: true
    rollback_on_failure: true

# 5. IDE自动化编程配置
ide_automation:
  # 开发环境配置
  development_environment:
    code_generation: true
    auto_completion: true
    real_time_validation: true
    debugging_integration: true
    
  # 测试环境配置  
  testing_environment:
    test_generation: true
    test_execution: true
    coverage_analysis: true
    performance_monitoring: true
    
  # 部署配置
  deployment_config:
    build_automation: true
    dependency_management: true
    containerization: true
    cloud_integration: true

# 6. GitHub提示词集自动拉取规则
git_prompt_collection:
  # GitHub仓库配置
  github_repository:
    owner: "minshengzhong3-byte"
    repo: "automation-prompt-sets"
    branch: "master"
    base_url: "https://raw.githubusercontent.com/minshengzhong3-byte/automation-prompt-sets/master"
  
  # 拉取触发条件
  pull_triggers:
    - "stage_change"  # 主要触发条件：阶段变化时自动同步
    - "project_initialization"
    - "development_type_change"
    - "manual_sync_request"
    - "prompt_file_not_found"
  
  # 拉取目标目录映射
  target_mapping:
    - github_path: "trae_rules/prompt_sets/core/"
      local_path: ".trae/rules/prompt_sets/core/"
      priority: "highest"
    - github_path: "trae_rules/prompt_sets/identities/"
      local_path: ".trae/rules/prompt_sets/identities/"
      priority: "high"
  
  # 拉取策略
  pull_strategy:
    method: "git_clone_or_pull"
    fallback_method: "http_download"
    retry_count: 3
    timeout_seconds: 30
    preserve_local_changes: false
    conflict_resolution: "github_wins"
  
  # 文件过滤规则
  file_filters:
    include_patterns:
      - "*.md"
      - "*.yaml"
      - "*.yml"
      - "framework.md"
      - "config.yaml"
    exclude_patterns:
      - "*.tmp"
      - "*.bak"
      - "*.log"
      - "node_modules/"
      - ".git/"
  
  # 验证和完整性检查
  validation:
    checksum_verification: false  # 简化验证，避免因checksum失败导致流程中断
    file_size_validation: false   # 禁用文件大小验证，避免因空文件导致失败
    required_files: []           # 清空必需文件列表，避免验证失败
    min_file_count: 0             # 设置为0，允许空目录存在
  
  # 状态监控和日志
  monitoring:
    log_level: "info"
    success_notification: true
    error_notification: true
    last_sync_timestamp: true
    sync_statistics: true
    # 新增：性能监控
    performance_metrics: true
    file_download_stats: true
    # 新增：错误处理
    retry_on_error: true
    error_threshold: 3  # 最多重试3次

# 7. 开发规范和流程
development_standards:
  # 代码规范
  code_standards:
    naming_conventions: true
    code_formatting: true
    documentation_requirements: true
    error_handling: true
    
  # 开发流程
  development_process:
    version_control: true
    code_review: true
    continuous_integration: true
    automated_testing: true
    
  # 质量保障
  quality_assurance:
    static_analysis: true
    security_scanning: true
    performance_testing: true
    accessibility_testing: true